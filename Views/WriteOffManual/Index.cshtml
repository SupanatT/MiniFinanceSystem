@using MiniFinance.Common
@using MiniFinance.Models
@model MiniFinance.ViewModel.WriteOffManual.MainDataViewModel

@*@section ScriptFirst{
    <script>
        function checkPermission() {
            if ('@Html.ValueFor(x => x.permission.View)' != 'True') {
                $('.@Html.IdFor(x => x.permission.View)').remove();
            }
            if ('@Html.ValueFor(x => x.permission.Save)' != 'True') {
                $('.@Html.IdFor(x => x.permission.Save)').remove();
            }
        }
    </script>
}*@

@{ 
    LoginModel LoginInfo = (LoginModel)Session[Constants.SESSION_KEY.LoginInfo];
}

<div id="divForm">

    <ul class="page-breadcrumb breadcrumb">
        <li>
            <a href="#">การจัดการ</a>
        </li>
        <li>
            <span class="active">บันทึกข้อมูลการตัดหนี้สูญ (Manual)</span>
        </li>
    </ul>

    <div class="row">
        <div class="col-md-12 ">
            <form method="post" id="formMain1">
                <div class="portlet box purple" style="margin-bottom: 5px;">
                    <div class="portlet-title">
                        <div class="caption">
                            ข้อมูลสัญญา
                        </div>
                        <div class="tools">
                            <a href="javascript:;" class="collapse" data-original-title="" title=""> </a>

                        </div>
                    </div>
                    <div class="portlet-body form">
                        <div class="form-body">
                            @*<div class="alert alert-danger display-hide">
                <button class="close" data-close="alert"></button> You have some form errors. Please check below.
            </div>*@
                            <div class="row">

                                <div class="@*@Html.IdFor(x => x.permission.View)*@ ">
                                    <div class="col-lg-4 col-md-4 col-sm-5 col-xs-12 form-group form-group-sm">
                                        @*@Html.LabelFor(m => m.ContractCode, new { @class = "control-label" })*@
                                        @Html.Label("ContractCode", new { @class = "control-label" })
                                        <div class="input-group input-group-sm">
                                            @Html.DropDownList("ContractCode", SelectListMethods.GetContractInBranchForDropdown(LoginInfo.login.compCode, LoginInfo.login.branchCode), "", new{
                                           @class = "form-control input-sm",
                                           required = true })

                                            <span class="input-group-addon btn btn-primary" onclick="popup()">
                                                <span class="fa fa-search"></span>
                                            </span>
                                        </div>
                                        <button class="btn blue btn-sm display-none" type="submit">
                                            <i class="fa fa-search"></i>
                                        </button>
                                        @*@Html.HiddenFor(x => x.ContractCode, new { @Value = Model.ContractCode })*@
                                    </div>
                                </div>


                                <div class="col-lg-2 col-md-4 col-sm-3 col-xs-6 form-group form-group-sm">
                                    @Html.LabelFor(m => m.LoanType, new { @class = "control-label" })
                                    @Html.TextBoxFor(m => m.LoanType, "", new { @class = "form-control input-sm ", disabled = "disable", @Value = Model.LoanType })
                                </div>


                                <div class="col-lg-2 col-md-4 col-sm-3 col-xs-6 form-group form-group-sm">
                                    @Html.LabelFor(m => m.LoanProductType, new { @class = "control-label" })
                                    @Html.TextBoxFor(m => m.LoanProductType, "", new { @class = "form-control input-sm  ", disabled = "disable", @Value = Model.LoanProductType })
                                </div>


                            </div>

                            <div class="row">
                                <div class="col-lg-4 col-md-4 col-sm-3 col-xs-6 form-group form-group-sm">
                                    @Html.LabelFor(m => m.CustomerIDCard, new { @class = "control-label" })
                                    @Html.TextBoxFor(m => m.CustomerIDCard, "", new { @class = "form-control input-sm ", disabled = "disable", @Value = Model.CustomerIDCard })
                                </div>
                                <div class="col-lg-4 col-md-4 col-sm-3 col-xs-6 form-group form-group-sm">
                                    @Html.LabelFor(m => m.CustomerName, new { @class = "control-label" })
                                    @Html.TextBoxFor(m => m.CustomerName, "", new { @class = "form-control input-sm ", disabled = "disable", @Value = Model.CustomerName })
                                </div>
                            </div>

                            <hr />

                            

                        <div id="CoreField-Panel"> <!-- LoanType ต่างกัน field ต่างกันใน Panel นี้ -->
                            @if (Model.ContractCode == null)
                            {
                                @:กรุณาเลือกเลขที่สัญญา
                            }
                            else if (Model.LoanTypeCode == Constants.LoanType.LN)
                            {
                                @Html.Partial("_LoanPartial", Model)
                            }
                            else if (Model.LoanTypeCode == Constants.LoanType.HP)
                            {
                                @Html.Partial("_HirepurchasePartial", Model)
                            }

                        </div>
                           
                            <hr />


                            <div class="row">
                                
                                <div class="col-md-3">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.WriteOffDate, new { @class = "control-label" })
                                        <div class="input-group input-group-sm date date-picker" data-date-language="th-th" data-date-format="dd/mm/yyyy">
                                            @Html.TextBoxFor(m => m.WriteOffDate, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm", required = true })
                                            <span class="input-group-btn">
                                                <button class="btn default" type="button">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>
                                        </div>
                                        @Html.LabelFor(m => m.WriteOffDate, new { @class = "error display-none" })
                                    </div>
                                </div>

                            </div>
                         </div>

                        <div class="form-actions">
                            <div class="form-group">
                                <div class="col-md-12" style="min-height: 1px;">
                                    <button type="button" id="btnSave" class="input-sm btn green @*@Html.IdFor(x => x.permission.Save)*@" onclick="Save()">บันทึก</button>
                                    <button type="button" id="btnCancel" class="input-sm btn default" onclick="Clear()">ยกเลิก</button>
                                </div>
                            </div>

                            <div style="margin-top:150px;"></div>
                            
                        </div>
                        

                    </div>
                </div>
                @*@Html.HiddenFor(x => x.ContractNo, new { @Value = ModelContractNo. })
                @Html.HiddenFor(x => x.ProductTypeCode, new { @Value = Model.ProductTypeCode })*@
            </form>
            
           

         </div>
    </div>



    <script>

        $(document).ready(function () {
            $("#@Html.IdFor(m => m.ContractCode)").select2({
                placeholder: 'ค้นหาเลขที่สัญญา',
                minimumInputLength: 3
            });

            $("#@Html.IdFor(m => m.WriteOffDate)").datepicker({
                language: 'th-th',
                format: 'dd/mm/yyyy',
                startDate: '-0d'

            });

            if ($('#@Html.IdFor(m => m.ContractCode)').val() == "")
            {
                $('#btnSave').prop('disabled', true);
            }

            $("#@Html.IdFor(m => m.ContractCode)").change(function () {

                $.ajax({
                    url: '@Url.Action("Search", "WriteOffManual")',
                    type: 'POST',
                    dataType: 'json',
                    data: {ContractCode : this.value},
                    success: function (e) {

                        if (e.r == '@Constants.Result.True')
                        {
                           $('#divForm').html(e.result);
                        }
                        else if(e.r == '@Constants.Result.False')
                        {
                            alertMessage(e.msg);
                            $('#@Html.IdFor(m => m.ContractCode)').val("").trigger('change');
                        }
                    }
                });

            });

        });


        function popup() {
            var data = { ControllerName: "@Constants.ControllerName.WriteOffManual" };
            modalPOST('', 'Base', 'ModalSearch', data, true);
        }

        function Save()
        {
            if (!$('#formMain1').validate().form()) {
                return;
            }

            var formData = $('#formMain1').serialize();

            bootbox.confirm("@Constants.Message.AskConfirmSave", function (rs) {
                if (rs == true)
                {
                    $.post(
                        '@Url.Action("Save", "WriteOffManual")',
                        formData,
                        function (data) {

                            if (data.result == true) {
                                bootbox.alert({
                                    message: data.msg,
                                    callback: function () {
                                        location.reload();
                                    }
                                })

                            }
                            else if (data.result == false) {
                                alertMessage(data.msg);
                            }

                        }
                    );
                }


            });
        }



    </script>


</div>
