@using MiniFinance.Common
@model MiniFinance.ViewModel.WriteOffManual.MainDataViewModel

<div class="row">
    <div class="col-md-3">
        @Html.LabelFor(m => m.TransactionDate, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.TransactionDate, new { @class = "form-control input-sm", @readonly = true, @Value = CommonMethods.stringDateTimeNullable(Model.TransactionDate) })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.FollowUpBy, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.FollowUpBy, new { @class = "form-control input-sm", @readonly = true, @Value = Model.FollowUpBy })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.ContractStatus, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.ContractStatus, new { @class = "form-control input-sm", @readonly = true, @Value = Model.ContractStatus })
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        @Html.LabelFor(m => m.Installment, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Installment, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.Installment) })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.InstallmentVat, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.InstallmentVat, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.InstallmentVat) })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.LastReceiptDate, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.LastReceiptDate, new { @class = "form-control input-sm", @readonly = true, @Value = CommonMethods.stringDateTimeNullable(Model.LastReceiptDate) })
    </div>

</div>

<div class="row">

    <div class="col-md-3">
        @Html.LabelFor(m => m.OverdueAmount, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.OverdueAmount, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.OverdueAmount) })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.OverdueVat, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.OverdueVat, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.OverdueVat) })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.SuspenseAmount, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.SuspenseAmount, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.SuspenseAmount) })
    </div>

</div>

<div class="row">
    <div class="col-md-3">
        @Html.LabelFor(m => m.PenaltyAmount, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.PenaltyAmount, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.PenaltyAmount) })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.LetterFee, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.LetterFee, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.LetterFee) })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.FollowUpFee, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.FollowUpFee, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.FollowUpFee) })
    </div>

</div>

<div class="row">

    <div class="col-md-3">
        @Html.LabelFor(m => m.OutstandingBalance, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.OutstandingBalance, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.OutstandingBalance) })
    </div>
    <div class="col-md-3">
        @Html.LabelFor(m => m.OutstandingVat, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.OutstandingVat, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.OutstandingVat) })
    </div>
    @*<div class="col-md-3">
        @Html.LabelFor(m => m.UnrealizedIncome, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.UnrealizedIncome, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.UnrealizedIncome) })
    </div>*@

</div>



<div class="row">

    <div class="col-md-3">
        @Html.LabelFor(m => m.WriteOffAmount, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.WriteOffAmount, new { @class = "form-control text-right input-sm", @readonly = true, @Value = String.Format("{0:n}", Model.WriteOffAmount) })
    </div>

    @Html.HiddenFor(m => m.WriteOffVatAmount, new { @Value = String.Format("{0:n}", Model.WriteOffVatAmount) })
    @Html.HiddenFor(m => m.WriteOffExVatAmount, new { @Value = String.Format("{0:n}", Model.WriteOffExVatAmount) })
</div>
